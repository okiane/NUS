wt = c(185,162,122,224,154)
ht = c(68,70,65,74,69)
people = data.frame(matrix(wt,ht),1,2)
wt = c(185,162,122,224,154)
ht = c(68,70,65,74,69)
people = data.frame(matrix(wt,ht),1,2)
people
people
people
people
people
people
people
# 3. bmi complete the code
wt = c(185,162,122,224,154)
ht = c(68,70,65,74,69)
people = data.frame(x=c(wt))
people
wt = c(185,162,122,224,154)
ht = c(68,70,65,74,69)
people = data.frame(c(wt),c(ht))
people
ComputeBMI
ComputeBMI = function(people){
BMI = 0.4*wt/(.02*ht)^2
return (BMI)
}
ComputeBMI
ComputeBMI = function(data.frame(people)){
BMI = 0.4*wt/(.02*ht)^2
return (BMI)
}
IsInteger = function(x){
is.integer(x)
}
listNum = c(1, 2, 3.3, 4.0, 5)
lapply(listNum,IsInteger)
IsInteger = function(x){
if (is.integer(x) == TRUE) {
return ("yes")
}
else{
return ("no")
}
}
listNum = c(1, 2, 3.3, 4.0, 5)
lapply(listNum,IsInteger)
sapply(listNum,IsInteger)
listNum
listNum
class listNum
class c(listNum)
class(listNum)
lapply(beaver1,max)
sapply(beaver2,max)
lapply(listBeaver1,max)
sapply(listBeaver2,max)
### 3. which(X)
#    X: can be a logical vector or an array.
#    NAs are treated as FALSE and will be omitted
# let's create a vector of random numbers
nums = sample(1:20, 10)
nums
# find out position (index) of numbers which are even
which(nums %% 2 == 0)
nums = c(nums, NA)
nums
which(nums %% 2 == 0)
setwd("E:/NUS/EBAC/EBA5001 Management of Business Analytics Project/1 Data Analytics Process and Best Practices/Assignment/Assignment 2/Task 1")
#Read files
key<-read.csv("/DABP_D3_Assignment_T1_Data/data/key.xls")
?read.csv
#Read files
key <- read.table("/DABP_D3_Assignment_T1_Data/data/key.xls", header=TRUE,)
#Read files
key <- read.table("/DABP_D3_Assignment_T1_Data/data/key.xls", header=TRUE)
#Read files
key <- read.table("/DABP_D3_Assignment_T1_Data/data/key.xls", sep=",", header=TRUE)
getwd
getwd()
#Read files
key <- read.table("./DABP_D3_Assignment_T1_Data/data/key.xls", sep=",", header=TRUE)
#Read files
key <- read.table("./DABP_D3_Assignment_T1_Data/data/key.xlsx", sep=",", header=TRUE)
View(key)
#Read files
key <- read.table("./DABP_D3_Assignment_T1_Data/data/key.xlsx", header=TRUE)
View(key)
require(gdata)
install.packages(gdata)
install.packages("gdata")
package(gdata)
#Set working directory
setwd("E:/NUS/EBAC/EBA5001 Management of Business Analytics Project/1 Data Analytics Process and Best Practices/Assignment/Assignment 2/Task 1")
#Read files
key <- read.xls("./DABP_D3_Assignment_T1_Data/data/key.xlsx")
#Read files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx")
View(key)
responses <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/responses.xlsx")
install.packages("gdata")
packages(gdata)
#Read files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx")
responses <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/responses.xlsx")
response <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx")
View(response)
head(response)
#Check file
head(key)
sapply(key,class)
#Check file
head(key)
sapply(key,class)
sapply(key,class=as.factor(character))
sapply(key,as.factor(character))
response[,2:nrow(response)]
nrow(response)
View(response)
summary(responses)
summary(response)
r1 <- str_squish(response)
?str_squish
#Install package to read .xlsx file
install.packages("gdata")
packages(gdata)
pacman::p_load(tidyverse, rebus,IRdisplay,data.table,
stringr, lubridate, editrules)
library(gdata)
gdata
gdata()
detach("package:gdata", unload = TRUE)
#
#
#Set working directory
setwd("E:/NUS/EBAC/EBA5001 Management of Business Analytics Project/1 Data Analytics Process and Best Practices/Assignment/Assignment 2/Task 1")
#Install package to read .xlsx file
install.packages("gdata")
library(gdata)
#Set working directory
setwd("E:/NUS/EBAC/EBA5001 Management of Business Analytics Project/1 Data Analytics Process and Best Practices/Assignment/Assignment 2/Task 1")
#Install package to read .xlsx file
install.packages("gdata")
library(gdata)
pacman::p_load(tidyverse, rebus,IRdisplay,data.table,
stringr, lubridate, editrules)
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx")
response <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx")
#Set working directory
setwd("E:/NUS/EBAC/EBA5001 Management of Business Analytics Project/1 Data Analytics Process and Best Practices/Assignment/Assignment 2/Task 1")
#Install package to read .xlsx file
install.packages("gdata")
pacman::p_load(tidyverse, rebus,IRdisplay,data.table,
stringr, lubridate, editrules, gdata)
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx")
response <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx")
#Check file
head(key)
dim(key)
head(response)
dim(response)
#Remove extra whitespaces and convert to lowercase
response1 <- str_to_lower(str_squish(response))
sapply(response,function(x) str_squish(x))
#Remove extra whitespaces and convert to lowercase
response1 <- sapply(response,function(x) str_to_lower(str_squish(x)))
View(response1)
#Remove extra whitespaces and convert to lowercase
key <- sapply(key, function(x) str_to_lower(str_squish(x)))
response <- sapply(response, function(x) str_to_lower(str_squish(x)))
View(response1)
View(response)
View(response1)
#Remove extra whitespaces and convert to lowercase
key <- sapply(key, function(x) str_to_lower(str_squish(x)))
response <- sapply(response, function(x) str_to_lower(str_squish(x)))
identical(key[1]=response[2])
identical(1==1)
identical(1,1)
#Remove extra whitespaces and convert to lowercase
key <- sapply(key, function(x) str_to_lower(str_squish(x)))
response <- sapply(response, function(x) str_to_lower(str_squish(x)))
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx")
response <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx")
#Check file
head(key)
dim(key)
head(response)
dim(response)
#Remove extra whitespaces and convert to lowercase
key <- sapply(key, function(x) str_to_lower(str_squish(x)))
response <- sapply(response, function(x) str_to_lower(str_squish(x)))
identical(key,response)
key(,2:ncol())
key(,2:ncol(x))
key(,2:ncol(key))
key(,1:ncol(key))
key()
key[1]
key[2,1]
key[1,2]
key[,2]
key[2,2]
key[2,1]
key[1,1]
key[3]
View(response)
type(response)
class(response)
class(key)
key<- as.factor(key)
class(key)
key<- as.matrix(key)
class(key)
key <- data.frame(key)
class(key)
#Read .xlsx files
key <- data.frame(readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx"))
response <- data.frame(readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx"))
View(key)
View(response)
#Remove extra whitespaces and convert to lowercase
key <- sapply(key, function(x) str_to_lower(str_squish(x)))
response <- sapply(response, function(x) str_to_lower(str_squish(x)))
class(key)
#Remove extra whitespaces and convert to lowercase
key <- data.frame(sapply(key, function(x) str_to_lower(str_squish(x))))
response <- data.frame(sapply(response, function(x) str_to_lower(str_squish(x))))
#Remove extra whitespaces and convert to lowercase
key <- data.frame(sapply(key, function(x) str_to_lower(str_squish(x))))
response <- data.frame(sapply(response, function(x) str_to_lower(str_squish(x))))
View(response)
response <- sapply(response, function(x) str_to_lower(str_squish(x)))
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx")
response <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx")
#Check file
head(key)
dim(key)
head(response)
dim(response)
#Remove extra whitespaces and convert to lowercase
key <- data.frame(sapply(key, function(x) str_to_lower(str_squish(x))))
response <- sapply(response, function(x) str_to_lower(str_squish(x)))
response <- data.frame(sapply(response, function(x) str_to_lower(str_squish(x))))
#Remove extra whitespaces and convert to lowercase
key <- data.frame(sapply(key, function(x) str_to_lower(str_squish(x))))
response <- data.frame(sapply(response, function(x) str_to_lower(str_squish(x))))
View(response)
response <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx")
response <- sapply(response, function(x) str_to_lower(str_squish(x))
response <- sapply(response, function(x) str_to_lower(str_squish(x)))
#Remove extra whitespaces and convert to lowercase
key <- data.frame(sapply(key, function(x) str_to_lower(str_squish(x))))
response <- sapply(response, function(x) str_to_lower(str_squish(x)))
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx")
response <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx")
#Remove extra whitespaces and convert to lowercase
key <- data.frame(sapply(key, function(x) str_to_lower(str_squish(x))))
response <- sapply(response, function(x) str_to_lower(str_squish(x)))
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx")
response <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx")
#Remove extra whitespaces and convert to lowercase
key <- matrix(sapply(key, function(x) str_to_lower(str_squish(x))))
response <- matrix(sapply(response, function(x) str_to_lower(str_squish(x))))
View(key)
View(response)
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx")
response <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx")
#Remove extra whitespaces and convert to lowercase
key <- sapply(key, function(x) str_to_lower(str_squish(x)))
response <- sapply(response, function(x) str_to_lower(str_squish(x)))
View(response)
str_match(key,response)
View(response)
colname=c("Key",key=cbind(key, "Key"))
view(key)
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx")
response <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx")
View(key)
#Data cleaning and preparation: Remove extra whitespaces and convert to lowercase
key <- sapply(key, function(x) str_to_lower(str_squish(x)))
response <- sapply(response, function(x) str_to_lower(str_squish(x)))
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx")
response <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx")
#Data cleaning and preparation: Remove extra whitespaces and convert to lowercase
key <- lapply(key, function(x) str_to_lower(str_squish(x)))
response <- lapply(response, function(x) str_to_lower(str_squish(x)))
View(response)
response <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx")
response <- sapply(response, function(x) str_to_lower(str_squish(x)))
View(response)
View(key)
key[1]
response[1]
c(key,"Answer Key")
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx")
response <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx")
c(key,"Answer Key")
View(key)
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx")
cbind(key$AnsKey,key)
cbind(AnsKey,key)
colnames(AnsKey)<-c("AnsKey",key)
a<-c("AnsKey")
colnames(key)<-c("AnsKey",key)
colnames(key)<-c("AnsKey",key)
as.matrix(key)
colnames(key)<-c("AnsKey",key)
colnames(key)<-matrix("AnsKey",key)
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx")
#Read .xlsx files
key <- matrix(readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx"))
View(key)
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx",col_names=TRUE)
response <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx",col_names=TRUE)
View(key)
colnames(key)<-matrix("AnsKey",key)
colnames(key)<-c("AnsKey",key)
colnames(key)<-cbind("AnsKey",key)
key<-cbind("AnsKey",key)
View(key)
key<-cbind(AnsKey,key)
key<-cbind('AnsKey,key)
''
'''
key<-cbind('AnsKey',key)
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx",col_names=TRUE)
response <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx",col_names=TRUE)
#Add new col "Ans Key" to key
key<-cbind('AnsKey',key)
View(key)
View(response)
key[1,1]
response[2,1]
response[2,2]
key[2,2]
View(key)
View(response)
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx",col_names=TRUE)
response <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx",col_names=TRUE)
#Add new col "Ans Key" to key
key<-cbind('AnsKey',key)
key[2,2]
class(key)
class(response)
response[1,1]
response[2,2]
key[2,2]
key[1],2]
key[1,2]
View(key)
response[1,2]
response[1,1]
response[1,2]
identical(response[1,],key[1,])
identical(response[,2],key[,1])
identical(response[1,2],key[1,2])
class(response[1,2])
class(key)
as.data.frame(response)
class(response)
class(as.data.frame(response))
#Install package to read .xlsx file
install.packages("gdata")
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx",col_names=TRUE)
response <- data.frame(readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx",col_names=TRUE))
#Add new col "Ans Key" to key
key<-cbind('AnsKey',key)
key<-data.frame(key)
class(response)
class(key)
key[1,2]
key[1,1]
key[2,1]
key[2,2]
key[1,2]
response[1,2]
identical(key[1,2],response[1,2])
result<-sapply(response,identical(key,response))
result<-sapply(response,identical(key[],response[]))
result<-sapply(response,identical(key[1,],response[]))
library(prodlim)
row.match(response,key)
row.match(response[],key[1])
row.match(response[,1],key[1,1])
row.match(response[1:ncol(response),1],key[1,1])
response[1:ncol(response)]
sapply(response[1,],identical(key[1,],response[1,]))
identical(key[1,],response[1,])
identical(key[1,2],response[1,2])
lapply(response,identical(key[1,2],response[1,2]))
sapply(response,identical(key[1,2],response[1,2]))
detach("package:prodlim", unload = TRUE)
l<-c(1:20)
m<-c(2:30)
sapply(l,identical(l,m))
s<-key[1]
s
s<-key[1,]
s
View(s)
View(key)
s<-key[1,2:ncol()]
s<-key[1,2:ncol(key)]
s
t<-key[1,2:ncol(key)]
sapply(t,identical(s,t))
sapply(t,s==t)
sapply(t,if(s==t))
sapply(t,if(s[]==t[]))
class(s)
response %>%
summarize(response)
summarize()
summarize(unique())
response %>%
summarize(response)
response %>%
summarize(unique())
summary(response)
response %>%
summarise(count=n())
response %>%
summarise(unique)
response %>%
summarise(unique())
response %>%
summarise(unique(response))
unique(response)
unique(response[,1])
unique(response[,2])
unique(response)
sapply(response,unique)
#Summarize all answers for each question
lapply(response,unique)
#Summarize all answers for each question
sapply(response,unique)
response %>%
sapply(response,identical(response, key))
checkAns <- function(r,c){
identical(response[r,c],key[1,c])
}
checkAns(1,1)
response[1,1]
print(response[2,1], key[2,1])
print(response[2,1], key[1,2])
print(response[1,2], key[1,2])
key[1,2]
response[1,2]
print(response[1,2] + key[1,2])
print(response[1,2] & key[1,2])
print(response[1,2]) + print(key[1,2]))
key[1,2]
print(response[1,2], key[1,2])
print(response[1,2], key[1,1])
print(response[1,2], key[10,1])
print(response[1,2], key[1,10])
print(response[1,2], key[1,7])
View(key)
checkAns(2,1)
sapply(response,checkAns())
sapply(response,checkAns(response[1,], response[,]))
directory
directory
directory
#Install package to read .xlsx file
install.packages("gdata")
pacman::p_load(tidyverse, rebus,IRdisplay,data.table,
stringr, lubridate, editrules, gdata)
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx",col_names=TRUE)
response <- data.frame(readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx",col_names=TRUE))
apply(key, 1,identical(key,response))
#Set working directory
setwd("E:/NUS/EBAC/EBA5001 Management of Business Analytics Project/1 Data Analytics Process and Best Practices/Assignment/Assignment 2/Task 1")
pacman::p_load(tidyverse, rebus,IRdisplay,data.table,
stringr, lubridate, editrules, gdata)
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx",col_names=TRUE)
response <- data.frame(readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx",col_names=TRUE))
#Set working directory
setwd("E:/NUS/EBAC/EBA5001 Management of Business Analytics Project/1 Data Analytics Process and Best Practices/Assignment/Assignment 2/Task 1")
pacman::p_load(tidyverse, rebus,IRdisplay,data.table,
stringr, lubridate, editrules, gdata)
#Read .xlsx files
key <- readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/key.xlsx",col_names=TRUE)
response <- data.frame(readxl::read_xlsx("./DABP_D3_Assignment_T1_Data/data/response.xlsx",col_names=TRUE))
View(key)
View(response)
key[1,1] %in% response$Q.1
response$Q.1 %in% key[1,1]
?match
match(response$Q.1, key[1,1])
match(response$Q.1, key[1,1], nomatch = 0)
?require
?lattice
